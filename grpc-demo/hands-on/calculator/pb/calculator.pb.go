// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/calculator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeDecomposeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecomposeRequest) Reset()         { *m = PrimeDecomposeRequest{} }
func (m *PrimeDecomposeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeDecomposeRequest) ProtoMessage()    {}
func (*PrimeDecomposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{2}
}

func (m *PrimeDecomposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecomposeRequest.Unmarshal(m, b)
}
func (m *PrimeDecomposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecomposeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeDecomposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecomposeRequest.Merge(m, src)
}
func (m *PrimeDecomposeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeDecomposeRequest.Size(m)
}
func (m *PrimeDecomposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecomposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecomposeRequest proto.InternalMessageInfo

func (m *PrimeDecomposeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeDecomposeResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecomposeResponse) Reset()         { *m = PrimeDecomposeResponse{} }
func (m *PrimeDecomposeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeDecomposeResponse) ProtoMessage()    {}
func (*PrimeDecomposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82e2d3384312a837, []int{3}
}

func (m *PrimeDecomposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecomposeResponse.Unmarshal(m, b)
}
func (m *PrimeDecomposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecomposeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeDecomposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecomposeResponse.Merge(m, src)
}
func (m *PrimeDecomposeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeDecomposeResponse.Size(m)
}
func (m *PrimeDecomposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecomposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecomposeResponse proto.InternalMessageInfo

func (m *PrimeDecomposeResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PrimeDecomposeRequest)(nil), "calculator.PrimeDecomposeRequest")
	proto.RegisterType((*PrimeDecomposeResponse)(nil), "calculator.PrimeDecomposeResponse")
}

func init() { proto.RegisterFile("pb/calculator.proto", fileDescriptor_82e2d3384312a837) }

var fileDescriptor_82e2d3384312a837 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x71, 0x81, 0x0c, 0xd7, 0xc2, 0x70, 0x08, 0x83, 0x3a, 0x51, 0x23, 0x24, 0xa6, 0xb6,
	0x82, 0x85, 0x19, 0x31, 0x23, 0xd4, 0x30, 0xc1, 0x80, 0x62, 0x73, 0x48, 0x91, 0xe2, 0xd8, 0xf8,
	0xe3, 0x17, 0xf1, 0x47, 0x91, 0x9c, 0x44, 0x49, 0xa0, 0xca, 0x78, 0x8f, 0x9e, 0xbc, 0x77, 0x6f,
	0x0c, 0x67, 0x56, 0x6e, 0x54, 0x51, 0xa9, 0x58, 0x15, 0xc1, 0xb8, 0xb5, 0x75, 0x26, 0x18, 0x84,
	0x9e, 0x88, 0x57, 0x80, 0x3c, 0xea, 0x1d, 0x7d, 0x47, 0xf2, 0x01, 0x57, 0xb0, 0xf8, 0x2a, 0x9d,
	0x0f, 0x1f, 0x75, 0xd4, 0x92, 0xdc, 0x25, 0xbb, 0x62, 0xb7, 0xc7, 0xbb, 0x79, 0x62, 0xcf, 0x09,
	0xe1, 0x35, 0x9c, 0x78, 0x52, 0xa6, 0xfe, 0xec, 0x9c, 0x59, 0x72, 0x16, 0x0d, 0x6c, 0x24, 0x71,
	0x03, 0xf3, 0x94, 0xea, 0xad, 0xa9, 0x3d, 0x21, 0x87, 0xcc, 0x91, 0x8f, 0x55, 0x68, 0x03, 0xdb,
	0x49, 0x6c, 0xe0, 0xfc, 0xc5, 0x95, 0x9a, 0x9e, 0x48, 0x19, 0x6d, 0x8d, 0xa7, 0xee, 0x0e, 0x0e,
	0xd9, 0xe8, 0x82, 0x76, 0x12, 0x5b, 0xe0, 0x7f, 0x3f, 0x98, 0x5e, 0x71, 0xf7, 0xc3, 0x60, 0x50,
	0x17, 0x1f, 0xe0, 0x30, 0x8f, 0x1a, 0xf9, 0x7a, 0xf0, 0x53, 0xfa, 0xfe, 0xcb, 0x8b, 0x7f, 0xbc,
	0x89, 0x17, 0x07, 0xf8, 0x0e, 0xa7, 0xe3, 0xd5, 0xb8, 0x1a, 0xca, 0x7b, 0x7b, 0x2c, 0xc5, 0x94,
	0xd2, 0x45, 0x6f, 0xd9, 0xe3, 0xd1, 0xdb, 0xcc, 0x4a, 0x99, 0xa5, 0xe7, 0xb9, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0xe6, 0xc7, 0x1a, 0x09, 0xb5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	PrimeDecompose(ctx context.Context, in *PrimeDecomposeRequest, opts ...grpc.CallOption) (Calculator_PrimeDecomposeClient, error)
}

type calculatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorClient(cc grpc.ClientConnInterface) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.calculator/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) PrimeDecompose(ctx context.Context, in *PrimeDecomposeRequest, opts ...grpc.CallOption) (Calculator_PrimeDecomposeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[0], "/calculator.calculator/PrimeDecompose", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorPrimeDecomposeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Calculator_PrimeDecomposeClient interface {
	Recv() (*PrimeDecomposeResponse, error)
	grpc.ClientStream
}

type calculatorPrimeDecomposeClient struct {
	grpc.ClientStream
}

func (x *calculatorPrimeDecomposeClient) Recv() (*PrimeDecomposeResponse, error) {
	m := new(PrimeDecomposeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	PrimeDecompose(*PrimeDecomposeRequest, Calculator_PrimeDecomposeServer) error
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServer) PrimeDecompose(req *PrimeDecomposeRequest, srv Calculator_PrimeDecomposeServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeDecompose not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.calculator/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_PrimeDecompose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeDecomposeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServer).PrimeDecompose(m, &calculatorPrimeDecomposeServer{stream})
}

type Calculator_PrimeDecomposeServer interface {
	Send(*PrimeDecomposeResponse) error
	grpc.ServerStream
}

type calculatorPrimeDecomposeServer struct {
	grpc.ServerStream
}

func (x *calculatorPrimeDecomposeServer) Send(m *PrimeDecomposeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Calculator_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecompose",
			Handler:       _Calculator_PrimeDecompose_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/calculator.proto",
}
